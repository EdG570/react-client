{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["import { actions } from './types';\n\nexport function getPosition() {\n\n  return new Promise(function(resolve, reject) {\n\n    navigator.geolocation.getCurrentPosition(\n\n      function(position) {\n        resolve(position);\n      },\n\n      function(error) {\n        reject(error);\n      }\n\n    );\n  });\n}\n\nfunction fetchUserIPAction() {\n  const rootURL = 'https://api.ipify.org?format=json';\n\n  return {\n    type: actions.FETCH_USER_IP,\n    meta: {\n      remote: {\n        url: rootURL,\n        method: 'GET'\n      }\n    }\n  };\n}\n\nexport function fetchUserLocation(ip) {\n  return fetchUserLocationAction(ip);\n}\n\nfunction fetchUserLocationAction(ip) {\n  const rootURL = 'http://ip-api.com/json';\n\n  return {\n    type: actions.FETCH_USER_LOCATION,\n    meta: {\n      remote: {\n        url: `${rootURL}/${ip}`,\n        method: 'GET'\n      }\n    }\n  };\n}\n\nexport function fetchUserIP() {\n  return fetchUserIPAction();\n}\n\nexport function getUserPosition() {\n  return getPosition()\n  .then((position) => {\n\n    let userCoords = {\n      type: actions.FETCH_USER_COORDINATES,\n      payload: {\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude\n      }\n    };\n\n    // TODO: Return action that stores userCoords in State\n    //return fetchCurrentWeatherAction(userCoords);\n    return userCoords;\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n}\n\nexport function fetchCurrentWeather() {\n  const rootURL = 'http://api.wunderground.com/api/';\n  const WEATHER_API_KEY = '1c2ef46287ff1e67';\n  const MAX_RETRIES = 3;\n  let i = 0;\n\n  return (dispatch, getState) => {\n      const state = getState();\n      const lat = state.app.coordinates.lat;\n      const long = state.app.coordinates.long;\n      if (i < MAX_RETRIES) {\n        i++;\n        if (!lat || !long) {\n          return setTimeout(() => {dispatch(fetchCurrentWeather())}, 1000);\n        }\n\n       return dispatch({\n          type: actions.FETCH_CURRENT_WEATHER,\n          meta: {\n            remote: {\n              url: `${rootURL}${WEATHER_API_KEY}/conditions/q/${lat},${long}.json`,\n              method: 'GET'\n            }\n          }\n        })\n      } else {\n\n\n        /* TODO: return type: FETCH CURRENT WEATHER ERROR. Handle with no coords.\n\n         */\n        return {};\n      }\n    };\n}\n\nexport function fetchForecastWeather() {\n\n  return getPosition()\n  .then((position) => {\n\n    let userCoords = {\n      lat: position.coords.latitude,\n      long: position.coords.longitude\n    };\n\n    return fetchForecastWeatherAction(userCoords);\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n}\n\nfunction fetchForecastWeatherAction(payload) {\n  const rootURL = 'http://api.wunderground.com/api/';\n  const WEATHER_API_KEY = '1c2ef46287ff1e67';\n  const lat = payload.lat;\n  const long = payload.long;\n\n  return {\n    type: actions.FETCH_FORECAST_WEATHER,\n    meta: {\n      remote: {\n        url: `${rootURL}${WEATHER_API_KEY}/forecast/q/${lat},${long}.json`,\n        method: 'GET'\n      }\n    }\n  };\n}\n\nexport function Signin({ email, password }) {\n  return SigninAction({ email, password });\n}\n\nfunction SigninAction(payload) {\n  const rootURL = 'http://localhost:3000/signin';\n\n  return {\n    type: actions.SIGNIN,\n    payload,\n    meta: {\n      remote: {\n        url: `${rootURL}`,\n        method: 'POST'\n      }\n    }\n  }\n}\n\nexport function Signup({ email, password }) {\n  return SignupAction({ email, password });\n}\n\nfunction SignupAction(payload) {\n  const rootURL = 'http://localhost:3000/signup';\n\n  return {\n    type: actions.SIGNUP,\n    payload,\n    meta: {\n      remote: {\n        url: `${rootURL}`,\n        method: 'POST'\n      }\n    }\n  }\n}\n\nexport function showWeatherDetails(day) {\n  console.log('DAY: ' + day);\n  return {\n    type: actions.SHOW_WEATHER_DETAILS,\n    payload: day\n  }\n}\n\n\n\n"]}